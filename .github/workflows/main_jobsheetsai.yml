name: Build and deploy Python project to Azure Function App - jobsheetsAI

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.' # Path to your web app project
  PYTHON_VERSION: '3.10' # Set supported Python version

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read # Required for actions/checkout
    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set Python version
      - name: Setup Python version
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      # Step 3: Create and activate virtual environment
      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate

      # Step 4: Install Python dependencies
      - name: Install dependencies
        run: pip install -r requirements.txt

      # Step 5: Debugging - List installed dependencies
      - name: Check installed dependencies
        run: pip list  # Outputs the installed libraries along with their versions

      # Step 6: Ensure necessary files (credentials, etc.) are included
      - name: Debugging - List project files before zipping
        run: ls -lh . # Lists files and ensures necessary files like credentials are present

      # Step 7: Zip the application for deployment
      - name: Zip artifact for deployment
        run: |
          zip release.zip ./* -r
          echo "Zipped the deployment package:"
          ls -lh release.zip  # Verifying the final size and details of the zip file

      # Step 8: Upload artifact for easier deployment debugging
      - name: Upload artifact for deployment
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            release.zip
            !venv/ # Exclude the virtual environment

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      id-token: write # Required for requesting the JWT for Azure authentication
      contents: read # Required for actions/checkout
    steps:
      # Step 1: Download the artifact from the build step
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: python-app

      # Step 2: Unzip the artifact
      - name: Unzip deployment package
        run: |
          echo "Unzipping the package..."
          unzip release.zip
          echo "Contents of unzipped package:"
          ls -lh

      # Step 3: Debugging - Verify important files exist
      - name: Debugging - Verify deployment package content
        run: |
          echo "Validating critical app files..."
          if [[ ! -f "requirements.txt" ]]; then echo "ERROR: requirements.txt is missing!"; exit 1; fi
          if [[ ! -f "your_credentials.json" ]]; then echo "ERROR: Google Sheets credentials are missing!"; exit 1; fi

      # Step 4: Login to Azure
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.__clientidsecretname__ }}
          tenant-id: ${{ secrets.__tenantidsecretname__ }}
          subscription-id: ${{ secrets.__subscriptionidsecretname__ }}

      # Step 5: Deploy to Azure Functions
      - name: Deploy to Azure Functions
        uses: Azure/functions-action@v1
        id: deploy-to-function
        with:
          app-name: 'jobsheetsAI'
          slot-name: 'Production'
          package: ${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}

      # Step 6: Debugging - Verify deployment
      - name: Verify deployment
        run: |
          echo "Deployment completed. Checking deployment status..."
          curl -v https://jobsheetsai.azurewebsites.net/api/ProcessTelegramMessage
